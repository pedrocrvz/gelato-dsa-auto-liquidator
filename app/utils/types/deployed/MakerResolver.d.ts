/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers'
import { Contract, ContractTransaction, CallOverrides } from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface MakerResolverInterface extends ethers.utils.Interface {
  functions: {
    'getMakerVaultCollateralBalance(uint256)': FunctionFragment
    'getMakerVaultDebt(uint256)': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'getMakerVaultCollateralBalance', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'getMakerVaultDebt', values: [BigNumberish]): string

  decodeFunctionResult(functionFragment: 'getMakerVaultCollateralBalance', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getMakerVaultDebt', data: BytesLike): Result

  events: {}
}

export class MakerResolver extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: MakerResolverInterface

  functions: {
    getMakerVaultCollateralBalance(
      _vaultId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    'getMakerVaultCollateralBalance(uint256)'(
      _vaultId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    getMakerVaultDebt(
      _vaultId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    'getMakerVaultDebt(uint256)'(
      _vaultId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>
  }

  getMakerVaultCollateralBalance(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

  'getMakerVaultCollateralBalance(uint256)'(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

  getMakerVaultDebt(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

  'getMakerVaultDebt(uint256)'(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

  callStatic: {
    getMakerVaultCollateralBalance(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'getMakerVaultCollateralBalance(uint256)'(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    getMakerVaultDebt(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'getMakerVaultDebt(uint256)'(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>
  }

  filters: {}

  estimateGas: {
    getMakerVaultCollateralBalance(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'getMakerVaultCollateralBalance(uint256)'(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    getMakerVaultDebt(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'getMakerVaultDebt(uint256)'(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>
  }

  populateTransaction: {
    getMakerVaultCollateralBalance(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'getMakerVaultCollateralBalance(uint256)'(
      _vaultId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    getMakerVaultDebt(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'getMakerVaultDebt(uint256)'(_vaultId: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>
  }
}
