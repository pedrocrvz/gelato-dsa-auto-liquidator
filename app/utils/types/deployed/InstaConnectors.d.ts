/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers'
import { Contract, ContractTransaction, Overrides, CallOverrides } from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface InstaConnectorsInterface extends ethers.utils.Interface {
  functions: {
    'chief(address)': FunctionFragment
    'connectorArray(uint256)': FunctionFragment
    'connectorCount()': FunctionFragment
    'connectorLength()': FunctionFragment
    'connectors(address)': FunctionFragment
    'disable(address)': FunctionFragment
    'disableChief(address)': FunctionFragment
    'enable(address)': FunctionFragment
    'enableChief(address)': FunctionFragment
    'enableStatic(address)': FunctionFragment
    'instaIndex()': FunctionFragment
    'isConnector(address[])': FunctionFragment
    'isStaticConnector(address[])': FunctionFragment
    'staticConnectorArray(uint256)': FunctionFragment
    'staticConnectorLength()': FunctionFragment
    'staticConnectors(address)': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'chief', values: [string]): string
  encodeFunctionData(functionFragment: 'connectorArray', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'connectorCount', values?: undefined): string
  encodeFunctionData(functionFragment: 'connectorLength', values?: undefined): string
  encodeFunctionData(functionFragment: 'connectors', values: [string]): string
  encodeFunctionData(functionFragment: 'disable', values: [string]): string
  encodeFunctionData(functionFragment: 'disableChief', values: [string]): string
  encodeFunctionData(functionFragment: 'enable', values: [string]): string
  encodeFunctionData(functionFragment: 'enableChief', values: [string]): string
  encodeFunctionData(functionFragment: 'enableStatic', values: [string]): string
  encodeFunctionData(functionFragment: 'instaIndex', values?: undefined): string
  encodeFunctionData(functionFragment: 'isConnector', values: [string[]]): string
  encodeFunctionData(functionFragment: 'isStaticConnector', values: [string[]]): string
  encodeFunctionData(functionFragment: 'staticConnectorArray', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'staticConnectorLength', values?: undefined): string
  encodeFunctionData(functionFragment: 'staticConnectors', values: [string]): string

  decodeFunctionResult(functionFragment: 'chief', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'connectorArray', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'connectorCount', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'connectorLength', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'connectors', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'disable', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'disableChief', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'enable', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'enableChief', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'enableStatic', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'instaIndex', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'isConnector', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'isStaticConnector', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'staticConnectorArray', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'staticConnectorLength', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'staticConnectors', data: BytesLike): Result

  events: {
    'LogAddController(address)': EventFragment
    'LogDisable(address)': EventFragment
    'LogEnable(address)': EventFragment
    'LogEnableStatic(address)': EventFragment
    'LogRemoveController(address)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'LogAddController'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'LogDisable'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'LogEnable'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'LogEnableStatic'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'LogRemoveController'): EventFragment
}

export class InstaConnectors extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: InstaConnectorsInterface

  functions: {
    chief(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: boolean
    }>

    'chief(address)'(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: boolean
    }>

    connectorArray(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    'connectorArray(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    connectorCount(
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    'connectorCount()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    connectorLength(
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    'connectorLength()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    connectors(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: boolean
    }>

    'connectors(address)'(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: boolean
    }>

    disable(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

    'disable(address)'(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

    disableChief(_userAddress: string, overrides?: Overrides): Promise<ContractTransaction>

    'disableChief(address)'(_userAddress: string, overrides?: Overrides): Promise<ContractTransaction>

    enable(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

    'enable(address)'(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

    enableChief(_userAddress: string, overrides?: Overrides): Promise<ContractTransaction>

    'enableChief(address)'(_userAddress: string, overrides?: Overrides): Promise<ContractTransaction>

    enableStatic(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

    'enableStatic(address)'(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

    instaIndex(
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    'instaIndex()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    isConnector(
      _connectors: string[],
      overrides?: CallOverrides,
    ): Promise<{
      isOk: boolean
      0: boolean
    }>

    'isConnector(address[])'(
      _connectors: string[],
      overrides?: CallOverrides,
    ): Promise<{
      isOk: boolean
      0: boolean
    }>

    isStaticConnector(
      _connectors: string[],
      overrides?: CallOverrides,
    ): Promise<{
      isOk: boolean
      0: boolean
    }>

    'isStaticConnector(address[])'(
      _connectors: string[],
      overrides?: CallOverrides,
    ): Promise<{
      isOk: boolean
      0: boolean
    }>

    staticConnectorArray(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    'staticConnectorArray(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    staticConnectorLength(
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    'staticConnectorLength()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    staticConnectors(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: boolean
    }>

    'staticConnectors(address)'(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: boolean
    }>
  }

  chief(arg0: string, overrides?: CallOverrides): Promise<boolean>

  'chief(address)'(arg0: string, overrides?: CallOverrides): Promise<boolean>

  connectorArray(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

  'connectorArray(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

  connectorCount(overrides?: CallOverrides): Promise<BigNumber>

  'connectorCount()'(overrides?: CallOverrides): Promise<BigNumber>

  connectorLength(overrides?: CallOverrides): Promise<BigNumber>

  'connectorLength()'(overrides?: CallOverrides): Promise<BigNumber>

  connectors(arg0: string, overrides?: CallOverrides): Promise<boolean>

  'connectors(address)'(arg0: string, overrides?: CallOverrides): Promise<boolean>

  disable(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

  'disable(address)'(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

  disableChief(_userAddress: string, overrides?: Overrides): Promise<ContractTransaction>

  'disableChief(address)'(_userAddress: string, overrides?: Overrides): Promise<ContractTransaction>

  enable(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

  'enable(address)'(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

  enableChief(_userAddress: string, overrides?: Overrides): Promise<ContractTransaction>

  'enableChief(address)'(_userAddress: string, overrides?: Overrides): Promise<ContractTransaction>

  enableStatic(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

  'enableStatic(address)'(_connector: string, overrides?: Overrides): Promise<ContractTransaction>

  instaIndex(overrides?: CallOverrides): Promise<string>

  'instaIndex()'(overrides?: CallOverrides): Promise<string>

  isConnector(_connectors: string[], overrides?: CallOverrides): Promise<boolean>

  'isConnector(address[])'(_connectors: string[], overrides?: CallOverrides): Promise<boolean>

  isStaticConnector(_connectors: string[], overrides?: CallOverrides): Promise<boolean>

  'isStaticConnector(address[])'(_connectors: string[], overrides?: CallOverrides): Promise<boolean>

  staticConnectorArray(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

  'staticConnectorArray(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

  staticConnectorLength(overrides?: CallOverrides): Promise<BigNumber>

  'staticConnectorLength()'(overrides?: CallOverrides): Promise<BigNumber>

  staticConnectors(arg0: string, overrides?: CallOverrides): Promise<boolean>

  'staticConnectors(address)'(arg0: string, overrides?: CallOverrides): Promise<boolean>

  callStatic: {
    chief(arg0: string, overrides?: CallOverrides): Promise<boolean>

    'chief(address)'(arg0: string, overrides?: CallOverrides): Promise<boolean>

    connectorArray(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

    'connectorArray(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

    connectorCount(overrides?: CallOverrides): Promise<BigNumber>

    'connectorCount()'(overrides?: CallOverrides): Promise<BigNumber>

    connectorLength(overrides?: CallOverrides): Promise<BigNumber>

    'connectorLength()'(overrides?: CallOverrides): Promise<BigNumber>

    connectors(arg0: string, overrides?: CallOverrides): Promise<boolean>

    'connectors(address)'(arg0: string, overrides?: CallOverrides): Promise<boolean>

    disable(_connector: string, overrides?: CallOverrides): Promise<void>

    'disable(address)'(_connector: string, overrides?: CallOverrides): Promise<void>

    disableChief(_userAddress: string, overrides?: CallOverrides): Promise<void>

    'disableChief(address)'(_userAddress: string, overrides?: CallOverrides): Promise<void>

    enable(_connector: string, overrides?: CallOverrides): Promise<void>

    'enable(address)'(_connector: string, overrides?: CallOverrides): Promise<void>

    enableChief(_userAddress: string, overrides?: CallOverrides): Promise<void>

    'enableChief(address)'(_userAddress: string, overrides?: CallOverrides): Promise<void>

    enableStatic(_connector: string, overrides?: CallOverrides): Promise<void>

    'enableStatic(address)'(_connector: string, overrides?: CallOverrides): Promise<void>

    instaIndex(overrides?: CallOverrides): Promise<string>

    'instaIndex()'(overrides?: CallOverrides): Promise<string>

    isConnector(_connectors: string[], overrides?: CallOverrides): Promise<boolean>

    'isConnector(address[])'(_connectors: string[], overrides?: CallOverrides): Promise<boolean>

    isStaticConnector(_connectors: string[], overrides?: CallOverrides): Promise<boolean>

    'isStaticConnector(address[])'(_connectors: string[], overrides?: CallOverrides): Promise<boolean>

    staticConnectorArray(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

    'staticConnectorArray(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

    staticConnectorLength(overrides?: CallOverrides): Promise<BigNumber>

    'staticConnectorLength()'(overrides?: CallOverrides): Promise<BigNumber>

    staticConnectors(arg0: string, overrides?: CallOverrides): Promise<boolean>

    'staticConnectors(address)'(arg0: string, overrides?: CallOverrides): Promise<boolean>
  }

  filters: {
    LogAddController(addr: string | null): EventFilter

    LogDisable(connector: string | null): EventFilter

    LogEnable(connector: string | null): EventFilter

    LogEnableStatic(connector: string | null): EventFilter

    LogRemoveController(addr: string | null): EventFilter
  }

  estimateGas: {
    chief(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'chief(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    connectorArray(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'connectorArray(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    connectorCount(overrides?: CallOverrides): Promise<BigNumber>

    'connectorCount()'(overrides?: CallOverrides): Promise<BigNumber>

    connectorLength(overrides?: CallOverrides): Promise<BigNumber>

    'connectorLength()'(overrides?: CallOverrides): Promise<BigNumber>

    connectors(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'connectors(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    disable(_connector: string, overrides?: Overrides): Promise<BigNumber>

    'disable(address)'(_connector: string, overrides?: Overrides): Promise<BigNumber>

    disableChief(_userAddress: string, overrides?: Overrides): Promise<BigNumber>

    'disableChief(address)'(_userAddress: string, overrides?: Overrides): Promise<BigNumber>

    enable(_connector: string, overrides?: Overrides): Promise<BigNumber>

    'enable(address)'(_connector: string, overrides?: Overrides): Promise<BigNumber>

    enableChief(_userAddress: string, overrides?: Overrides): Promise<BigNumber>

    'enableChief(address)'(_userAddress: string, overrides?: Overrides): Promise<BigNumber>

    enableStatic(_connector: string, overrides?: Overrides): Promise<BigNumber>

    'enableStatic(address)'(_connector: string, overrides?: Overrides): Promise<BigNumber>

    instaIndex(overrides?: CallOverrides): Promise<BigNumber>

    'instaIndex()'(overrides?: CallOverrides): Promise<BigNumber>

    isConnector(_connectors: string[], overrides?: CallOverrides): Promise<BigNumber>

    'isConnector(address[])'(_connectors: string[], overrides?: CallOverrides): Promise<BigNumber>

    isStaticConnector(_connectors: string[], overrides?: CallOverrides): Promise<BigNumber>

    'isStaticConnector(address[])'(_connectors: string[], overrides?: CallOverrides): Promise<BigNumber>

    staticConnectorArray(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'staticConnectorArray(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    staticConnectorLength(overrides?: CallOverrides): Promise<BigNumber>

    'staticConnectorLength()'(overrides?: CallOverrides): Promise<BigNumber>

    staticConnectors(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'staticConnectors(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>
  }

  populateTransaction: {
    chief(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'chief(address)'(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    connectorArray(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'connectorArray(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    connectorCount(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'connectorCount()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    connectorLength(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'connectorLength()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    connectors(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'connectors(address)'(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    disable(_connector: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'disable(address)'(_connector: string, overrides?: Overrides): Promise<PopulatedTransaction>

    disableChief(_userAddress: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'disableChief(address)'(_userAddress: string, overrides?: Overrides): Promise<PopulatedTransaction>

    enable(_connector: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'enable(address)'(_connector: string, overrides?: Overrides): Promise<PopulatedTransaction>

    enableChief(_userAddress: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'enableChief(address)'(_userAddress: string, overrides?: Overrides): Promise<PopulatedTransaction>

    enableStatic(_connector: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'enableStatic(address)'(_connector: string, overrides?: Overrides): Promise<PopulatedTransaction>

    instaIndex(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'instaIndex()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    isConnector(_connectors: string[], overrides?: CallOverrides): Promise<PopulatedTransaction>

    'isConnector(address[])'(_connectors: string[], overrides?: CallOverrides): Promise<PopulatedTransaction>

    isStaticConnector(_connectors: string[], overrides?: CallOverrides): Promise<PopulatedTransaction>

    'isStaticConnector(address[])'(_connectors: string[], overrides?: CallOverrides): Promise<PopulatedTransaction>

    staticConnectorArray(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'staticConnectorArray(uint256)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    staticConnectorLength(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'staticConnectorLength()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    staticConnectors(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'staticConnectors(address)'(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>
  }
}
