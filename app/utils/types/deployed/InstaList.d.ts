/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers'
import { Contract, ContractTransaction, Overrides, CallOverrides } from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface InstaListInterface extends ethers.utils.Interface {
  functions: {
    'accountAddr(uint64)': FunctionFragment
    'accountID(address)': FunctionFragment
    'accountLink(uint64)': FunctionFragment
    'accountList(uint64,address)': FunctionFragment
    'accounts()': FunctionFragment
    'addAuth(address)': FunctionFragment
    'init(address)': FunctionFragment
    'instaIndex()': FunctionFragment
    'removeAuth(address)': FunctionFragment
    'userLink(address)': FunctionFragment
    'userList(address,uint64)': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'accountAddr', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'accountID', values: [string]): string
  encodeFunctionData(functionFragment: 'accountLink', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'accountList', values: [BigNumberish, string]): string
  encodeFunctionData(functionFragment: 'accounts', values?: undefined): string
  encodeFunctionData(functionFragment: 'addAuth', values: [string]): string
  encodeFunctionData(functionFragment: 'init', values: [string]): string
  encodeFunctionData(functionFragment: 'instaIndex', values?: undefined): string
  encodeFunctionData(functionFragment: 'removeAuth', values: [string]): string
  encodeFunctionData(functionFragment: 'userLink', values: [string]): string
  encodeFunctionData(functionFragment: 'userList', values: [string, BigNumberish]): string

  decodeFunctionResult(functionFragment: 'accountAddr', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'accountID', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'accountLink', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'accountList', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'accounts', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'addAuth', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'init', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'instaIndex', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'removeAuth', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'userLink', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'userList', data: BytesLike): Result

  events: {}
}

export class InstaList extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: InstaListInterface

  functions: {
    accountAddr(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    'accountAddr(uint64)'(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    accountID(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    'accountID(address)'(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    accountLink(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      first: string
      last: string
      count: BigNumber
      0: string
      1: string
      2: BigNumber
    }>

    'accountLink(uint64)'(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      first: string
      last: string
      count: BigNumber
      0: string
      1: string
      2: BigNumber
    }>

    accountList(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides,
    ): Promise<{
      prev: string
      next: string
      0: string
      1: string
    }>

    'accountList(uint64,address)'(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides,
    ): Promise<{
      prev: string
      next: string
      0: string
      1: string
    }>

    accounts(
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    'accounts()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: BigNumber
    }>

    addAuth(_owner: string, overrides?: Overrides): Promise<ContractTransaction>

    'addAuth(address)'(_owner: string, overrides?: Overrides): Promise<ContractTransaction>

    init(_account: string, overrides?: Overrides): Promise<ContractTransaction>

    'init(address)'(_account: string, overrides?: Overrides): Promise<ContractTransaction>

    instaIndex(
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    'instaIndex()'(
      overrides?: CallOverrides,
    ): Promise<{
      0: string
    }>

    removeAuth(_owner: string, overrides?: Overrides): Promise<ContractTransaction>

    'removeAuth(address)'(_owner: string, overrides?: Overrides): Promise<ContractTransaction>

    userLink(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      first: BigNumber
      last: BigNumber
      count: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    'userLink(address)'(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      first: BigNumber
      last: BigNumber
      count: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    userList(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      prev: BigNumber
      next: BigNumber
      0: BigNumber
      1: BigNumber
    }>

    'userList(address,uint64)'(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      prev: BigNumber
      next: BigNumber
      0: BigNumber
      1: BigNumber
    }>
  }

  accountAddr(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

  'accountAddr(uint64)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

  accountID(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

  'accountID(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

  accountLink(
    arg0: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    first: string
    last: string
    count: BigNumber
    0: string
    1: string
    2: BigNumber
  }>

  'accountLink(uint64)'(
    arg0: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    first: string
    last: string
    count: BigNumber
    0: string
    1: string
    2: BigNumber
  }>

  accountList(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides,
  ): Promise<{
    prev: string
    next: string
    0: string
    1: string
  }>

  'accountList(uint64,address)'(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides,
  ): Promise<{
    prev: string
    next: string
    0: string
    1: string
  }>

  accounts(overrides?: CallOverrides): Promise<BigNumber>

  'accounts()'(overrides?: CallOverrides): Promise<BigNumber>

  addAuth(_owner: string, overrides?: Overrides): Promise<ContractTransaction>

  'addAuth(address)'(_owner: string, overrides?: Overrides): Promise<ContractTransaction>

  init(_account: string, overrides?: Overrides): Promise<ContractTransaction>

  'init(address)'(_account: string, overrides?: Overrides): Promise<ContractTransaction>

  instaIndex(overrides?: CallOverrides): Promise<string>

  'instaIndex()'(overrides?: CallOverrides): Promise<string>

  removeAuth(_owner: string, overrides?: Overrides): Promise<ContractTransaction>

  'removeAuth(address)'(_owner: string, overrides?: Overrides): Promise<ContractTransaction>

  userLink(
    arg0: string,
    overrides?: CallOverrides,
  ): Promise<{
    first: BigNumber
    last: BigNumber
    count: BigNumber
    0: BigNumber
    1: BigNumber
    2: BigNumber
  }>

  'userLink(address)'(
    arg0: string,
    overrides?: CallOverrides,
  ): Promise<{
    first: BigNumber
    last: BigNumber
    count: BigNumber
    0: BigNumber
    1: BigNumber
    2: BigNumber
  }>

  userList(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    prev: BigNumber
    next: BigNumber
    0: BigNumber
    1: BigNumber
  }>

  'userList(address,uint64)'(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    prev: BigNumber
    next: BigNumber
    0: BigNumber
    1: BigNumber
  }>

  callStatic: {
    accountAddr(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

    'accountAddr(uint64)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

    accountID(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'accountID(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    accountLink(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      first: string
      last: string
      count: BigNumber
      0: string
      1: string
      2: BigNumber
    }>

    'accountLink(uint64)'(
      arg0: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      first: string
      last: string
      count: BigNumber
      0: string
      1: string
      2: BigNumber
    }>

    accountList(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides,
    ): Promise<{
      prev: string
      next: string
      0: string
      1: string
    }>

    'accountList(uint64,address)'(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides,
    ): Promise<{
      prev: string
      next: string
      0: string
      1: string
    }>

    accounts(overrides?: CallOverrides): Promise<BigNumber>

    'accounts()'(overrides?: CallOverrides): Promise<BigNumber>

    addAuth(_owner: string, overrides?: CallOverrides): Promise<void>

    'addAuth(address)'(_owner: string, overrides?: CallOverrides): Promise<void>

    init(_account: string, overrides?: CallOverrides): Promise<void>

    'init(address)'(_account: string, overrides?: CallOverrides): Promise<void>

    instaIndex(overrides?: CallOverrides): Promise<string>

    'instaIndex()'(overrides?: CallOverrides): Promise<string>

    removeAuth(_owner: string, overrides?: CallOverrides): Promise<void>

    'removeAuth(address)'(_owner: string, overrides?: CallOverrides): Promise<void>

    userLink(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      first: BigNumber
      last: BigNumber
      count: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    'userLink(address)'(
      arg0: string,
      overrides?: CallOverrides,
    ): Promise<{
      first: BigNumber
      last: BigNumber
      count: BigNumber
      0: BigNumber
      1: BigNumber
      2: BigNumber
    }>

    userList(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      prev: BigNumber
      next: BigNumber
      0: BigNumber
      1: BigNumber
    }>

    'userList(address,uint64)'(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      prev: BigNumber
      next: BigNumber
      0: BigNumber
      1: BigNumber
    }>
  }

  filters: {}

  estimateGas: {
    accountAddr(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'accountAddr(uint64)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    accountID(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'accountID(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    accountLink(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'accountLink(uint64)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    accountList(arg0: BigNumberish, arg1: string, overrides?: CallOverrides): Promise<BigNumber>

    'accountList(uint64,address)'(arg0: BigNumberish, arg1: string, overrides?: CallOverrides): Promise<BigNumber>

    accounts(overrides?: CallOverrides): Promise<BigNumber>

    'accounts()'(overrides?: CallOverrides): Promise<BigNumber>

    addAuth(_owner: string, overrides?: Overrides): Promise<BigNumber>

    'addAuth(address)'(_owner: string, overrides?: Overrides): Promise<BigNumber>

    init(_account: string, overrides?: Overrides): Promise<BigNumber>

    'init(address)'(_account: string, overrides?: Overrides): Promise<BigNumber>

    instaIndex(overrides?: CallOverrides): Promise<BigNumber>

    'instaIndex()'(overrides?: CallOverrides): Promise<BigNumber>

    removeAuth(_owner: string, overrides?: Overrides): Promise<BigNumber>

    'removeAuth(address)'(_owner: string, overrides?: Overrides): Promise<BigNumber>

    userLink(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'userLink(address)'(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    userList(arg0: string, arg1: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'userList(address,uint64)'(arg0: string, arg1: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>
  }

  populateTransaction: {
    accountAddr(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'accountAddr(uint64)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    accountID(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'accountID(address)'(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    accountLink(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'accountLink(uint64)'(arg0: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    accountList(arg0: BigNumberish, arg1: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'accountList(uint64,address)'(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    accounts(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'accounts()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    addAuth(_owner: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'addAuth(address)'(_owner: string, overrides?: Overrides): Promise<PopulatedTransaction>

    init(_account: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'init(address)'(_account: string, overrides?: Overrides): Promise<PopulatedTransaction>

    instaIndex(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'instaIndex()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    removeAuth(_owner: string, overrides?: Overrides): Promise<PopulatedTransaction>

    'removeAuth(address)'(_owner: string, overrides?: Overrides): Promise<PopulatedTransaction>

    userLink(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'userLink(address)'(arg0: string, overrides?: CallOverrides): Promise<PopulatedTransaction>

    userList(arg0: string, arg1: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'userList(address,uint64)'(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>
  }
}
