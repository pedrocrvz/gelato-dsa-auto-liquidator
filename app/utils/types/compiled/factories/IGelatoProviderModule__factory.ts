/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from 'ethers'
import { Provider } from '@ethersproject/providers'

import type { IGelatoProviderModule } from '../IGelatoProviderModule'

export class IGelatoProviderModule__factory {
  static connect(address: string, signerOrProvider: Signer | Provider): IGelatoProviderModule {
    return new Contract(address, _abi, signerOrProvider) as IGelatoProviderModule
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_taskReceiptId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_userProxy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_provider',
        type: 'address',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'contract IGelatoCondition',
                name: 'inst',
                type: 'address',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Condition[]',
            name: 'conditions',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'addr',
                type: 'address',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
              {
                internalType: 'enum Operation',
                name: 'operation',
                type: 'uint8',
              },
              {
                internalType: 'enum DataFlow',
                name: 'dataFlow',
                type: 'uint8',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bool',
                name: 'termsOkCheck',
                type: 'bool',
              },
            ],
            internalType: 'struct Action[]',
            name: 'actions',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'selfProviderGasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'selfProviderGasPriceCeil',
            type: 'uint256',
          },
        ],
        internalType: 'struct Task',
        name: '_task',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_cycleId',
        type: 'uint256',
      },
    ],
    name: 'execPayload',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
      {
        internalType: 'bool',
        name: 'checkReturndata',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_proxyReturndata',
        type: 'bytes',
      },
    ],
    name: 'execRevertCheck',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_userProxy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_provider',
        type: 'address',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'contract IGelatoCondition',
                name: 'inst',
                type: 'address',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
            ],
            internalType: 'struct Condition[]',
            name: 'conditions',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'address',
                name: 'addr',
                type: 'address',
              },
              {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
              },
              {
                internalType: 'enum Operation',
                name: 'operation',
                type: 'uint8',
              },
              {
                internalType: 'enum DataFlow',
                name: 'dataFlow',
                type: 'uint8',
              },
              {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
              },
              {
                internalType: 'bool',
                name: 'termsOkCheck',
                type: 'bool',
              },
            ],
            internalType: 'struct Action[]',
            name: 'actions',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'selfProviderGasLimit',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'selfProviderGasPriceCeil',
            type: 'uint256',
          },
        ],
        internalType: 'struct Task',
        name: '_task',
        type: 'tuple',
      },
    ],
    name: 'isProvided',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]
