/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers'
import { Contract, ContractTransaction, CallOverrides } from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface IInstaMakerResolverInterface extends ethers.utils.Interface {
  functions: {
    'getVaultById(uint256)': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'getVaultById', values: [BigNumberish]): string

  decodeFunctionResult(functionFragment: 'getVaultById', data: BytesLike): Result

  events: {}
}

export class IInstaMakerResolver extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: IInstaMakerResolverInterface

  functions: {
    getVaultById(
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        id: BigNumber
        owner: string
        colType: string
        collateral: BigNumber
        art: BigNumber
        debt: BigNumber
        liquidatedCol: BigNumber
        borrowRate: BigNumber
        colPrice: BigNumber
        liquidationRatio: BigNumber
        vaultAddress: string
        0: BigNumber
        1: string
        2: string
        3: BigNumber
        4: BigNumber
        5: BigNumber
        6: BigNumber
        7: BigNumber
        8: BigNumber
        9: BigNumber
        10: string
      }
    }>

    'getVaultById(uint256)'(
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        id: BigNumber
        owner: string
        colType: string
        collateral: BigNumber
        art: BigNumber
        debt: BigNumber
        liquidatedCol: BigNumber
        borrowRate: BigNumber
        colPrice: BigNumber
        liquidationRatio: BigNumber
        vaultAddress: string
        0: BigNumber
        1: string
        2: string
        3: BigNumber
        4: BigNumber
        5: BigNumber
        6: BigNumber
        7: BigNumber
        8: BigNumber
        9: BigNumber
        10: string
      }
    }>
  }

  getVaultById(
    id: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    id: BigNumber
    owner: string
    colType: string
    collateral: BigNumber
    art: BigNumber
    debt: BigNumber
    liquidatedCol: BigNumber
    borrowRate: BigNumber
    colPrice: BigNumber
    liquidationRatio: BigNumber
    vaultAddress: string
    0: BigNumber
    1: string
    2: string
    3: BigNumber
    4: BigNumber
    5: BigNumber
    6: BigNumber
    7: BigNumber
    8: BigNumber
    9: BigNumber
    10: string
  }>

  'getVaultById(uint256)'(
    id: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<{
    id: BigNumber
    owner: string
    colType: string
    collateral: BigNumber
    art: BigNumber
    debt: BigNumber
    liquidatedCol: BigNumber
    borrowRate: BigNumber
    colPrice: BigNumber
    liquidationRatio: BigNumber
    vaultAddress: string
    0: BigNumber
    1: string
    2: string
    3: BigNumber
    4: BigNumber
    5: BigNumber
    6: BigNumber
    7: BigNumber
    8: BigNumber
    9: BigNumber
    10: string
  }>

  callStatic: {
    getVaultById(
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      id: BigNumber
      owner: string
      colType: string
      collateral: BigNumber
      art: BigNumber
      debt: BigNumber
      liquidatedCol: BigNumber
      borrowRate: BigNumber
      colPrice: BigNumber
      liquidationRatio: BigNumber
      vaultAddress: string
      0: BigNumber
      1: string
      2: string
      3: BigNumber
      4: BigNumber
      5: BigNumber
      6: BigNumber
      7: BigNumber
      8: BigNumber
      9: BigNumber
      10: string
    }>

    'getVaultById(uint256)'(
      id: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<{
      id: BigNumber
      owner: string
      colType: string
      collateral: BigNumber
      art: BigNumber
      debt: BigNumber
      liquidatedCol: BigNumber
      borrowRate: BigNumber
      colPrice: BigNumber
      liquidationRatio: BigNumber
      vaultAddress: string
      0: BigNumber
      1: string
      2: string
      3: BigNumber
      4: BigNumber
      5: BigNumber
      6: BigNumber
      7: BigNumber
      8: BigNumber
      9: BigNumber
      10: string
    }>
  }

  filters: {}

  estimateGas: {
    getVaultById(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'getVaultById(uint256)'(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>
  }

  populateTransaction: {
    getVaultById(id: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>

    'getVaultById(uint256)'(id: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>
  }
}
