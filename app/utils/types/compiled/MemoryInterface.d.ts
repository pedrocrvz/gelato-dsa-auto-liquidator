/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers'
import { Contract, ContractTransaction, Overrides, CallOverrides } from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface MemoryInterfaceInterface extends ethers.utils.Interface {
  functions: {
    'getUint(uint256)': FunctionFragment
    'setUint(uint256,uint256)': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'getUint', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'setUint', values: [BigNumberish, BigNumberish]): string

  decodeFunctionResult(functionFragment: 'getUint', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'setUint', data: BytesLike): Result

  events: {}
}

export class MemoryInterface extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: MemoryInterfaceInterface

  functions: {
    getUint(_id: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>

    'getUint(uint256)'(_id: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>

    setUint(_id: BigNumberish, _val: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>

    'setUint(uint256,uint256)'(
      _id: BigNumberish,
      _val: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>
  }

  getUint(_id: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>

  'getUint(uint256)'(_id: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>

  setUint(_id: BigNumberish, _val: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>

  'setUint(uint256,uint256)'(_id: BigNumberish, _val: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>

  callStatic: {
    getUint(_id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    'getUint(uint256)'(_id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

    setUint(_id: BigNumberish, _val: BigNumberish, overrides?: CallOverrides): Promise<void>

    'setUint(uint256,uint256)'(_id: BigNumberish, _val: BigNumberish, overrides?: CallOverrides): Promise<void>
  }

  filters: {}

  estimateGas: {
    getUint(_id: BigNumberish, overrides?: Overrides): Promise<BigNumber>

    'getUint(uint256)'(_id: BigNumberish, overrides?: Overrides): Promise<BigNumber>

    setUint(_id: BigNumberish, _val: BigNumberish, overrides?: Overrides): Promise<BigNumber>

    'setUint(uint256,uint256)'(_id: BigNumberish, _val: BigNumberish, overrides?: Overrides): Promise<BigNumber>
  }

  populateTransaction: {
    getUint(_id: BigNumberish, overrides?: Overrides): Promise<PopulatedTransaction>

    'getUint(uint256)'(_id: BigNumberish, overrides?: Overrides): Promise<PopulatedTransaction>

    setUint(_id: BigNumberish, _val: BigNumberish, overrides?: Overrides): Promise<PopulatedTransaction>

    'setUint(uint256,uint256)'(
      _id: BigNumberish,
      _val: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>
  }
}
